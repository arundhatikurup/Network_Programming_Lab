FTP

Server:-

#include <sys/socket.h>
#include <netinet/in.h>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include<sys/stat.h>
#include<sys/sendfile.h>
#include <fcntl.h>
int main(int argc,char *argv[])
{
struct sockaddr_in address1,address2;
struct stat obj;
int sock_descr,temp_descr;
socklen_t len;
char buf[100],choice[10],length[100],filename[100];
int k,i;
int filehandle;
memset(&address1,0,sizeof(address1));
memset(&address2,0,sizeof(address2));
sock_descr=socket(AF_INET,SOCK_STREAM,0);
if(sock_descr==-1)
{
printf("socket creation failed");
exit(1);
}
address1.sin_family=AF_INET;
address1.sin_port=3001;
address1.sin_addr.s_addr=INADDR_ANY;//inet_addr(argv[1]);
k=bind(sock_descr,(struct sockaddr*)&address1,sizeof(address1));
if(k==-1)
{
printf("binding error");
exit(1);
}
k=listen(sock_descr,5);
if(k==-1)
{
printf("listen failed");
exit(1);
}
len=sizeof(address2);
temp_descr=accept(sock_descr,(struct sockaddr*)&address2,&len);
if(temp_descr==-1)
{
printf("temp: socket creation failed");
exit(1);
}
while(1)
{
k=recv(temp_descr,buf,100,0);
if(k==-1)
{
printf("receive failed");
exit(1);
}
for(i=0;i<4;i++)
choice[i]=buf[i];
choice[4]='\0';
printf("\n%s",choice);
if(strcmp(choice,"LIST")==0)
{
system("ls -al>list.txt");
filehandle=open("list.txt",O_RDONLY);//
stat("list.txt",&obj);//
sprintf(length,"%d",(int)obj.st_size);
k=send(temp_descr,length,strlen(length),0);
if(k==-1)
{
printf("send failed");
exit(1);
}
k=sendfile(temp_descr,filehandle,NULL,obj.st_size);
if(k==-1)
{
printf("file sendingfailed");
exit(1);
}
}
if(strcmp(choice,"LOAD")==0)
{
strcpy(filename,buf+4);
stat(filename,&obj);
filehandle=open(filename,O_RDONLY);
if(filehandle==-1)
{
printf("NO SUCH FILE\n");
exit(1);
}
sprintf(length,"%d",(int)obj.st_size);
printf("\n%s\n",length);
k=send(temp_descr,length,strlen(length),0);
if(k==-1)
{
printf("send failed");
exit(1);
}
sendfile(temp_descr,filehandle,NULL,obj.st_size);
if(k==-1)
{
printf("file sendingfailed");
exit(1);
}
}
}
return 0;
}


Client:-

#include <sys/socket.h>
#include <netinet/in.h>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include<sys/stat.h>
#include<sys/sendfile.h>
#include <fcntl.h>
int main(int arc,char *argv[])
{
struct sockaddr_in address;
int sock_descr;
int k,choice,len,l,c=0,filehandle;
char buf[100],length[100],fil[100],filename[100];
memset(&address,0,sizeof(address));
sock_descr=socket(AF_INET,SOCK_STREAM,0);
if(sock_descr==-1)
{
printf("socket creation failed");
exit(1);
}
address.sin_family=AF_INET;
address.sin_port=3001;
address.sin_addr.s_addr=INADDR_ANY;
k=connect(sock_descr,(struct sockaddr*)&address,sizeof(address));
if(k==-1)
{
printf("connecting failed");
exit(1);
}
while(1)
{
printf("\n1:LIST\n2:LOAD\n3:Exit : ");
scanf("%d",&choice);
switch(choice)
{
case 1:
filehandle=open("list2.txt",O_RDWR|O_CREAT,0700);
strcpy(buf,"LIST");
k=send(sock_descr,buf,strlen(buf),0);
if(k==-1)
{
printf("send failed");
exit(1);
}
k=recv(sock_descr,length,100,0);
if(k==-1)
{
printf("receive failed");
exit(1);
}
len=atoi(length);
while(c<len)
{
l=read(sock_descr,fil,100);
if(l==0)
break;
write(filehandle,fil,100);
c+=l;
}
system("cat list2.txt");
close(filehandle);
break;
case 2:
filehandle=open("list3.txt",O_RDWR|O_CREAT,0700);
strcpy(buf,"LOAD");
printf("Enter filename : ");
scanf("%s",filename);
strcat(buf,filename);
k=send(sock_descr,buf,strlen(buf),0);
if(k==-1)
{
printf("send failed");
exit(1);
}
k=recv(sock_descr,length,100,0);
if(k==-1)
{
printf("receive failed");
exit(1);
}
len=atoi(length);
c=0;
while(c<len)
{
l=read(sock_descr,fil,strlen(fil));
if(l==0)
break;
write(filehandle,fil,strlen(fil));
c+=l;
}
system("cat list3.txt");
break;
case 3:
exit(0);
default:
break;
}
}
return 0;
}

OUTPUT:

LIST
-rwx------ 1 sample sample 6874 2009-05-09 17:50 1bitclient
-rwx------ 1 sample sample 2396 2009-05-09 17:50 1bitclient.c
-rwx------ 1 sample sample 6833 2009-05-09 17:50 1bitserver
-rwx------ 1 sample sample 2653 2009-05-09 17:50 1bitserver.c
-rwx------ 1 sample sample 6874 2009-05-09 17:50 1c
-rwx------ 1 sample sample 6833 2009-05-09 17:50 1s
-rwxr-xr-x 1 sample sample 9417 2009-05-09 17:52 a.out
-rwx------ 1 sample sample 7804 2009-05-09 17:50 ban
-rwx------ 1 sample sample 7804 2009-05-09 17:50 bank
-rwx------ 1 sample sample 1533 2009-05-09 17:50 bankers.c
-rwx------ 1 sample sample 7804 2009-05-09 17:50 bankexit
-rwxr-xr-x 1 sample sample 9117 2009-05-09 17:52 c
LOAD bankers.c
The chosen file has been downloaded.
STORE example.txt
The chosen file has been uploaded

